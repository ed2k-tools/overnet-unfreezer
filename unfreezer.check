#!/bin/bash

# UnFreezer lite v0.2
# A set of scripts to determine when the OVERNET Linux command line client has "frozen" - does not respond to
# user interaction anymore - and kill/restart it then.
# Copyleft 2002 Praetorian - check LICENSE.unfreezer for the license conditions.

# Let the world know we have started up
echo `date` "Starting UnFreezer."

while true;
	do	# Load the configfile
		. ./unfreezer.conf;

		# Wait a few seconds so we don't check all the time
		sleep $CHECK_WAIT;

		# Check if our unfreezer.sh parent process is running - the parent PID is given by the PPID bash variable. 
		# If not, it has been ended by the user or something unexpected. In this case we should clean up and "die".
		ps -A | grep -w "$PPID" >/dev/null 2>&1 || { echo `date` "Shutting down UnFreezer."; exit 1; };

		# If the virtual memory usage of OVERNET exceeds 2mio kbytes, it will freeze soon or already is frozen.
		MEM_USAGE="`ps axv | grep -w \"./$OVERNET\" | grep -vw \"grep\" | head -n1 | awk '{print $7}'`";

                # If VERBOSE_LOGGING is on, let the world know we are there with a new check loop
                test "$VERBOSE_LOGGING" = "TRUE" && echo -n "`date` ";
                test "$VERBOSE_LOGGING" = "TRUE" && ps axv | grep -w "./$OVERNET" | grep -vw "grep" | head -n1;

		# In case overnet is currently being restarted or something, the output won't be useable, wait for the next loop. 
		test "$MEM_USAGE" = "" && test "$VERBOSE_LOGGING" = "TRUE" && echo "Cannot determine OVERNET's reserved memory."
		test "$MEM_USAGE" = "" && continue;

		if [ "`expr $MEM_USAGE \> 2000000`" = "1" ]; 
			then	echo "OVERNET's reserved memory: $MEM_USAGE kbytes.";
				echo -n `date` "Killing OVERNET...";
				# Kill the OVERNET main process
				OVERNET_PID="`ps -A | grep -w \"$OVERNET\" | grep -vw \"grep\" | head -n1 | awk '{print $1}'`";
				if [ "$OVERNET_PID" = "" ]; 
					then	echo "already dead.";
					else	if kill $OVERNET_PID >/dev/null 2>&1
							then	echo "killed.";
							else	echo "can't kill."
								# Let's be a bit more rude.
								if kill -9 $OVERNET_PID >/dev/null 2>&1
									then	echo "killed (-9).";
									else	echo "can't kill (-9).";
										# Perhaps the PID is wrong?
										# Maybe the next loop can do something.
								fi;
						fi;


				fi;		
				# Now unfreezer.sh will wake up and start another loop.
				# So will we.
		fi;
		

	done;

